/* 
 * vim:sts=2 ts=2 sw=2
 */
/* ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
   ┃              THIS IS FILE INTENDED TO STORE STYLE FOR HTML TAG               ┃
   ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ */
/* ╭──────────────────────────────────────────────────────────────────────────────╮
   │                                     FONT                                     │
   ╰──────────────────────────────────────────────────────────────────────────────╯ */
@font-face {
  font-family: "Cozette"; /* Define the name of the font */
  src: url("../source/font/CozetteVector.ttf"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "RealityHyper"; /* Define the name of the font */
  src: url("../source/font/Reality_Hyper_Regular.ttf"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "BebasNeue"; /* Define the name of the font */
  src: url("../source/font/BebasNeue-Regular.woff2"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "SpacePort"; /* Define the name of the font */
  src: url("../source/font/Spaceport_2006.otf"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "Azonix"; /* Define the name of the font */
  src: url("../source/font/Azonix.otf"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "RobotoRegular"; /* Define the name of the font */
  src: url("../source/font/Roboto-Regular.ttf"); /* Defines the URL(s) where the font should be downloaded from */
}
@font-face {
  font-family: "AllerRegular"; /* Define the name of the font */
  src: url("../source/font/Aller_Rg.ttf"); /* Defines the URL(s) where the font should be downloaded from */
}
/* ╭──────────────────────────────────────────────────────────────────────────────╮
   │                                   VARIABLE                                   │
   ╰──────────────────────────────────────────────────────────────────────────────╯ */
:root { /* Represent an element that is the root of document */
  --text-color: #dadada;
  --background-color: #000000;
}

html {
  font-size: 1.1rem; /* Set the size of the font */
  font-family: "AllerRegular"; /* Set font are used for text */
  background-color: var(--background-color); /* Set the background-color */
}

hr {
  height: 0.1em; /* Set height of element */
  border-width: 0px; /* Set to no border */
  background: linear-gradient(140deg, #d70000 0%, #ff0800 100%);
}

body {
  color: var(--text-color); /* Set the foreground-color */
  margin: 0; /* Define space/blank around elements, outside of any border */
  padding: 0; /* Create space/blank around elements, inside of any defined borders */
}

nav {
  position: absolute;
  z-index: 9;
  display: flex;
  justify-content: space-around;
  position: absolute;
  top: 0;
  right: 50px;
}

nav h1 {
  top: 0;
  left: 0;
  margin: 0;
  text-align: start;
  font-size: 2.2em; /* Set the size of the font */
  font-family: "BebasNeue"; /* Set font are used for text */
  background: linear-gradient(140deg, #aa0000 0%, #d70000 100%);
  position: relative;
  background-clip: text;
  -moz-background-clip: text;
  -webkit-background-clip: text;
  -moz-text-fill-color: transparent;
  -webkit-text-fill-color: transparent;
}

nav .list {
  display: flex;
  align-items: center;
  list-style: none;
}

nav .list li a {
  margin-left: 30px;
  margin-right: 10px;
  text-decoration: none;
  color: var(--text-color);
  transition: all 0.2s ease;
}

header { /* Set style for header tag */
  min-height: 100vh; /* Allows authors to constrain content height to a certain range. */
  background-image: url(../source/img/craccken-preview.svg); /* Sets the background image(s) of an element. */
  background-position: center; /* Specifies the initial position of the background image(s) (after any resizing) within their corresponding background positioning area. */
  background-repeat: no-repeat; /* Specifies how background images are tiled after they have been sized and positioned. <repeat | no-repeat> */
  z-index: 1;
  display: flex; /* In combination with 'float' and 'position', determines the type of box or boxes that are generated for an element. */
  margin: auto; /* Shorthand property to set values for the thickness of the margin area. */
  justify-content: center; /* Aligns flex items along the main axis of the current line of the flex container. */
  align-items: center;
}
header::before {
  position: absolute;
  background-color: #9f0027;
  content: "";
  height: 100vh;
  width: 100%;
  top: 0;
  left: 0;
  opacity: 0.4;
  z-index: 0;
}
.features {
  padding-top: 80px;
  background-color: #000;
  position: relative;
  z-index: 11;
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card {
  background-color: #000;
  width: 100%;
  height: 500px;
  max-height: 600px;
  max-width: 540px;
  color: #fff;
  text-align: start;
  padding: 50px 35px;
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 16px;
  box-shadow: 0 4px 30px 0 rgba(255, 255, 255, 0.1);
  -webkit-backdrop-filter: blur(2px);
  backdrop-filter: blur(2px);
}
.Preview h2 {
  text-align: center;
  margin-bottom: 0px;
}
footer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 30px;
}
@media (width > 2000px) and (width < 3000px) {
  header {
    background-size: 3000px;
  }
}
